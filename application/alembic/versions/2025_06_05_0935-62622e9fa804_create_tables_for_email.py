"""create tables for email

Revision ID: 62622e9fa804
Revises: a9fa38f49e97
Create Date: 2025-06-05 09:35:54.449850

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '62622e9fa804'
down_revision: Union[str, None] = 'a9fa38f49e97'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emails',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=True),
    sa.Column('sent_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('fk_emails_sender_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_emails'))
    )
    op.create_table('email_recipients',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email_id', sa.Integer(), nullable=False),
    sa.Column('recipient_email', sa.String(length=320), nullable=False),
    sa.ForeignKeyConstraint(['email_id'], ['emails.id'], name=op.f('fk_email_recipients_email_id_emails')),
    sa.PrimaryKeyConstraint('id', 'email_id', name=op.f('pk_email_recipients'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('email_recipients')
    op.drop_table('emails')
    # ### end Alembic commands ###
